@import "_grid-core";
@import "_clearfix";

@mixin breakpoint($point) {
	@if $point == desktop {
		@media (min-width: 1024px) { @content; }
	}
  @if $point == tablet {
    @media (min-width: 767px) and (max-width: 1024px) { @content; }
  }
  @else if $point == mobile {
    @media (max-width: 767px) { @content; }
  }
}

@mixin retina-only{
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    @content;
  }
}

$degredation-selector: '.no_media_queries';
$ie6-selector: '.ie6';
$grid-debug: false;

@include define-grid-settings(
  $grid-name: 'grid-8',
  $is-fluid: true,
  $column-width: 140,
  $gutter-width: 0,
  $gutter-property: 'margin',
  $num-columns: 8,
  $padding-left: 0,
  $padding-right: 0,
  $breakpoints: (
    (
      query 'screen and (max-width: 979px)',
      max-width 768px,
      padding-left 20px,
      padding-right 20px,
      column-width 42
      apply-to-browsers-w/o-media-queries true
    ),(
      query 'screen and (max-width: 767px)',
      max-width 100%,
      padding-left 20px,
      padding-right 20px
    )
  )
);

@include apply-grid(
  $use-grid: 'grid-8',
  $container-selector: '.grid_container',
  $row-selector: '.grid_row_8',
  $row-extend-selectors: '%grid_row',
  $column-selector-prefix: '.grid_col_',
  $column-extend-selectors: '%grid_col',
  $output-column-styles-for: 1 2 3 4 5 6 7 8,
  $break-columns: (
    (
      breakpoint 2,
      selector '.grid_col_2, .grid_col_3, .grid_col_4, .grid_col_5, .grid_col_6',
      columns 8
    )
  )
);

%grid_row{
  @include clearfix;
}

%grid_col {
  float: left;
}

.grid_container{
  margin-right: 30%;  
  margin-left: 20px;
  @include breakpoint(tablet){
    margin: 0px;
  }
  @include breakpoint(mobile){
    margin: 0px;
  }
}